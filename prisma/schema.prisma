// Este é o arquivo de esquema Prisma,
// saiba mais sobre ele na documentação: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário
model Usuario {
  id Int @id @default(autoincrement())
  idObra Int?
  obra Obra? @relation(fields: [idObra], references: [id])
  usuario String
  email String
  senha String
  ativo Boolean
  role String @default("Usuário Padrão") // Defina o valor padrão como "Usuário"
  dataCriacao DateTime @default(now())
}

// Modelo de Obra
model Obra {
  id Int @id @default(autoincrement()) // ID único da obra
  descricaoObra String // Descrição da obra
  empresaObra String // Nome da empresa da obra
  nomeResponsavel String // Nome do responsável pela obra
  telefoneContato String // Número de telefone de contato
  enderecoCompleto String // Endereço completo da obra
  logo String // Logotipo da obra
  ativo Boolean // Indica se a obra está ativa
  usuarios Usuario[] // Relacionamento com os usuários associados à obra
  equipes Equipe[] // Relacionamento com as equipes da obra
  servicos Servico[] // Relacionamento com os serviços da obra
  efetivos Efetivo[] // Relacionamento com os efetivos da obra
  turnos Turno[] // Relacionamento com os turnos da obra
  interferencias Interferencia[] // Relacionamento com as interferências da obra
  locais Local[] // Relacionamento com os locais da obra
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}

// Modelo de Categoria de Serviço
model CategoriaServico {
  id Int @id @default(autoincrement()) // ID único da categoria de serviço
  nome String // Nome da categoria de serviço
  ativo Boolean // Indica se a categoria de serviço está ativa
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
  subcategorias SubCategoriaServico[] // Relacionamento com as subcategorias de serviço
}

// Modelo de Subcategoria de Serviço
model SubCategoriaServico {
  id Int @id @default(autoincrement()) // ID único da subcategoria de serviço
  nome String // Nome da subcategoria de serviço
  ativo Boolean // Indica se a subcategoria de serviço está ativa
  categoriaServicoId Int // ID da categoria de serviço à qual a subcategoria pertence
  categoriaServico CategoriaServico @relation(fields: [categoriaServicoId], references: [id]) // Relacionamento com a categoria de serviço
  servicos Servico[] // Relacionamento com os serviços associados à subcategoria
}

// Modelo de Serviço
model Servico {
  id Int @id @default(autoincrement()) // ID único do serviço
  idObra Int // ID da obra à qual o serviço está associado
  obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
  descricaoServico String // Descrição do serviço
  unidade String // Unidade de medida do serviço
  ativo Boolean // Indica se o serviço está ativo
  subcategoriaId Int // ID da subcategoria de serviço à qual o serviço pertence
  subcategoria SubCategoriaServico @relation(fields: [subcategoriaId], references: [id]) // Relacionamento com a subcategoria de serviço
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}

// Modelo de Equipe
model Equipe {
  id Int @id @default(autoincrement()) // ID único da equipe
  idObra Int // ID da obra à qual a equipe está associada
  obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
  descricaoEquipe String // Descrição da equipe
  empresaContratada String // Nome da empresa contratada para a equipe
  ativo Boolean // Indica se a equipe está ativa
  turnos Turno[] // Relacionamento com os turnos da equipe
  interferencias Interferencia[] // Relacionamento com as interferências da equipe
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}

// Modelo de Efetivo
model Efetivo {
  id Int @id @default(autoincrement()) // ID único do efetivo
  idObra Int // ID da obra à qual o efetivo está associado
  obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
  tipo String // Tipo de efetivo
  descricaoEfetivo String // Descrição do efetivo
  ativo Boolean // Indica se o efetivo está ativo
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}

// Modelo de Turno
model Turno {
  id Int @id @default(autoincrement()) // ID único do turno
  idEquipe Int // ID da equipe à qual o turno está associado
  equipe Equipe @relation(fields: [idEquipe], references: [id]) // Relacionamento com a equipe
  idObra Int // ID da obra à qual o turno está associado
  obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
  descricaoTurno String // Descrição do turno
  praticabilidade String // Praticabilidade do turno
  clima String // Condições climáticas do turno
  ativo Boolean // Indica se o turno está ativo
  dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}


// Modelo de Interferência
model Interferencia {
id Int @id @default(autoincrement()) // ID único da interferência
idEquipe Int // ID da equipe à qual a interferência está associada
equipe Equipe @relation(fields: [idEquipe], references: [id]) // Relacionamento com a equipe
idObra Int // ID da obra à qual a interferência está associada
obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
responsavelInterferencia String // Responsável pela interferência
categoria String // Categoria da interferência
subCategoria String // Subcategoria da interferência
ativo Boolean // Indica se a interferência está ativa
dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}


// Modelo de Local
model Local {
id Int @id @default(autoincrement()) // ID único do local
idObra Int // ID da obra à qual o local está associado
obra Obra @relation(fields: [idObra], references: [id]) // Relacionamento com a obra
descricaoLocal String // Descrição do local
responsavelLocal String // Responsável pelo local
ativo Boolean // Indica se o local está ativo
dataCriacao DateTime @default(now()) // Data e hora de criação do registro
}
